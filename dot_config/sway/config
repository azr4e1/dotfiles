# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

exec syncthing serve --no-browser --logfile=default
exec gammastep

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# Recommends: foot
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
set $rofi_cmd rofi \
        -terminal '$term'
# Shows a combined list of the applications with desktop files and
# executables from PATH.
# TODO: add window with the next release of rofi-wayland
set $menu $rofi_cmd -show combi -combi-modes "drun,run" -modes combi

set $background ~/Pictures/Pics/Wallpapers/cafe-at-night_00_3840x2160.png
set $lock_background 'swaylock -f -i ~/Pictures/Pics/Wallpapers/tokyocity.png'
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
output * bg $background fit

set $pixel_border 2
set $outer_gaps 10
set $inner_gaps 7

smart_borders no_gaps
default_border pixel $pixel_border
titlebar_border_thickness $pixel_border
gaps outer $outer_gaps
gaps inner $inner_gaps

focus_follows_mouse no

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }

input "type:keyboard" {
    xkb_layout us
    xkb_variant altgr-intl
    xkb_options caps:escape_shifted_capslock
    repeat_delay 225
    repeat_rate 35
}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+Return exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10

    bindsym $mod+Next workspace next
    bindsym $mod+Prior workspace prev
    bindsym --whole-window {
        $mod+button4 workspace prev
        $mod+button5 workspace next
    }
    bindsym $mod+Shift+Next move container to workspace next; workspace next
    bindsym $mod+Shift+Prior move container to workspace prev; workspace prev
    bindsym $mod+Home exec $vpn up
    bindsym $mod+End exec $vpn down
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splitv
    bindsym $mod+v splith

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

bindsym $mod+equal gaps inner current set 0; gaps outer current set 0
bindsym $mod+plus gaps inner current set $inner_gaps; gaps outer current set $outer_gaps

bindsym $mod+Shift+Escape exec $lock_background

set $lof ~/.go/bin/lof
set $select "python3 ~/.config/sway/scripts/launch_or_focus.py"
set $vpn ~/.config/sway/scripts/vpn-shortcut
set $rename_w "python3 ~/.config/sway/scripts/rename-workspace.py"

bindsym $mod+i exec $lof -action launch_focus -criteria app_id -identifier firefox -cmd firefox
bindsym $mod+t exec $lof -action launch_focus -criteria app_id -identifier $term -cmd $term
bindsym $mod+d exec $lof -action launch_focus -criteria app_id -identifier thunar -cmd thunar
bindsym $mod+p exec $lof -action launch_focus -criteria app_id -identifier keepassxc -cmd keepassxc
bindsym $mod+u exec $lof -action launch_focus -criteria app_id -identifier email -cmd "foot --app-id=email aerc"
bindsym $mod+m exec $lof -action launch_focus -criteria app_id -identifier music -cmd "foot --app-id=music ncmpcpp"
bindsym $mod+n exec $lof -action launch_focus -criteria app_id -identifier editor -cmd "foot --app-id=editor nvim"
bindsym $mod+c exec $lof -action launch_focus -criteria app_id -identifier calendar -cmd "foot --app-id=calendar khal interactive"
bindsym $mod+Shift+n exec $lof -action launch_focus -criteria app_id -identifier notes -cmd "foot --app-id=notes notepy --vault /home/ld/Desktop/Knowledge --autocommit browse"

bindsym $mod+Shift+Backspace exec dunstctl history-pop
bindsym $mod+Backspace exec dunstctl close-all

bindsym $mod+F8 exec mpc toggle
bindsym $mod+F7 exec mpc prev; mpc play
bindsym $mod+F9 exec mpc next; mpc play

bindsym $mod+Shift+r exec $rename_w

bindsym $mod+Grave exec $lof -action switch_prev
bindsym $mod+Tab exec $select


# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.

## class                 border  backgr. text    indicator child_border
client.focused          #7aa2f7 #414868 #c0caf5 #7dcfff   #7aa2f7
client.focused_inactive #7aa2f7 #414868 #c0caf5 #7dcfff   #414868
client.unfocused        #414868 #24283b #a9b1d6 #7dcfff   #414868
client.urgent           #e0af68 #e0af68 #1d202f #7dcfff   #e0af68


for_window [app_id="blueman-manager"] {
    floating enable
    resize set width 35 ppt height 50 ppt
}

for_window [app_id="nm-connection-editor"] {
    floating enable
    resize set width 35 ppt height 50 ppt
}

# for_window [app_id="email"] {
#     floating enable
#     resize set width 50 ppt height 75 ppt
# }
#
# for_window [app_id="music"] {
#     floating enable
#     resize set width 50 ppt height 75 ppt
# }

include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
